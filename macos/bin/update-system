#!/usr/bin/env zsh

# Default to interactive mode
AUTO_APPROVE=false

if [[ "$1" == "-y" ]]; then
  AUTO_APPROVE=true
  echo "Running in non-interactive mode. All updates will be applied automatically."
fi

# Prompt user for confirmation
confirm() {
  local prompt="$1"
  local check_command="$2"
  local action="$3"

  if $AUTO_APPROVE; then
    eval "$action"
    return
  fi

  if [[ -n "$check_command" ]]; then
    eval "$check_command"
  fi

  echo -n "\e[33m$prompt\e[0m [Y/n]: "
  read -r response

  if [[ "$response" =~ ^[Nn]$ ]]; then
    echo "Skipping this step..."
  else
    eval "$action"
  fi
}

echo "\e[34m=== Oh-My-Zsh ===\e[0m"
confirm "Update oh-my-zsh?" \
  "" \
  "{ $ZSH/tools/upgrade.sh }"

echo "\e[34m=== Homebrew ===\e[0m"
brew update
confirm "Update brew formulae?" \
  "{
    echo '\e[33mFreshest brew formulae\e[0m:';
    brew outdated --formula;
  }" \
  "{ brew upgrade }"
confirm "Update brew casks?" \
  "{
    echo '\e[33mFreshest brew casks\e[0m:';
    brew outdated --cask --greedy;
  }" \
  "{ brew upgrade --greedy --no-quarantine }"
echo "Running brew cleanup..."
brew autoremove
brew cleanup

echo "\e[34m=== Rust and Cargo packages ===\e[0m"
confirm "Update Rust and global Rust packages?" \
  "{
    echo '\e[33mRustiest version\e[0m:'; rustup check;
    echo '\e[33mRecent Cargo shipments\e[0m:'; cargo install-update --list;
  }" \
  "{
    rustup update stable;
    cargo install-update --all;
  }"

echo "\e[34m=== Go packages ===\e[0m"
confirm "Update global Go packages?" \
  "{
    echo '\e[33mUpdates (to-Go)\e[0m:';
    go-global-update --dry-run
  }" \
  "{ go-global-update }"

npm install -g npm
echo "\e[34m=== Node packages ===\e[0m"
confirm "Update global Node packages?" \
  "{
    echo '\e[33mNew nodes\e[0m:'; npm outdated -g
  }" \
  "{ npm update -g }"

python3 -m pip install --upgrade pip
echo "\e[34m=== Python packages ===\e[0m"
confirm "Update global Python packages?" \
  "{
    echo '\e[33mUpdatesssss\e[0m:';
    python3 -m pip list --outdated
  }" \
  "{
    python3 -m pip list --outdated --format=json \
    | jq '.[].name' \
    | xargs -n1 python3 -m pip install --upgrade
  }"

echo "\e[34m=== uv tools ===\e[0m"
confirm "Update uv tools?" \
  "" \
  "{ uv tool upgrade --all }"

echo "\e[32mSystem update complete!\e[0m"
